import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c2f65d89.js";const F=JSON.parse('{"title":"2-B1. はじめてのプログラミング nano 編","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-1/practice/nano-test.md","filePath":"text/chapter-1/practice/nano-test.md"}'),e={name:"text/chapter-1/practice/nano-test.md"},o=l(`<h1 id="_2-b1-はじめてのプログラミング-nano-編" tabindex="-1">2-B1. はじめてのプログラミング nano 編 <a class="header-anchor" href="#_2-b1-はじめてのプログラミング-nano-編" aria-label="Permalink to &quot;2-B1. はじめてのプログラミング nano 編&quot;">​</a></h1><p>さきほどの操作はすべてターミナル上で完結させることもできる。ここでは少しだけそれを試してみよう。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>ここで紹介するのは「できる」というだけでの紹介で、本講習中では VSCode を使うことを強くおすすめします！</p></div><ol><li>「作業環境を開く方法」まで一緒</li><li><code>nano nano-test.cpp</code> でコードを開く</li><li>キーを入力すると色々入力できる。</li><li>ソースコードを入力する。</li><li><code>Ctrl + X</code>で終了</li><li><code>y</code>を入力したあと、<code>Enter</code>を押すと保存</li><li><code>ls</code>コマンドで<code>nano-test.cpp</code>があることを確認</li><li>ターミナル上で、<code>clang++ nano-test.cpp</code> で「コンパイル」</li><li>エラーが出なかったら、 <code>./a.out</code> で「実行」</li><li>できた！</li></ol><p>この方法で、次のソースコードからなる <code>nano-test.cpp</code> を作成してみよう。</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, nano!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>わからなかったり、詰まったりしたらすぐに TA を呼びましょう！</p></div>`,7),p=[o];function t(c,r,i,d,D,y){return n(),a("div",null,p)}const u=s(e,[["render",t]]);export{F as __pageData,u as default};
